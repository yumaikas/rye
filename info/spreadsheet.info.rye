section "base" "base text" {

	group "spreadsheet" 
	""
	{
		arg "* columns"
		arg "* data"
	}

	{
		equal { spreadsheet { "a" } { 1 2 } |type? } 'spreadsheet
		equal { spreadsheet { 'a } { 1 2 } |type? } 'spreadsheet
	}

	group "spreadsheet\\columns" 
	""
	{
	}

	{
		equal {
		spreadsheet\columns { 'a 'b } { { 1 2 } { "x" "y" } }
		} spreadsheet { 'a 'b } { 1 "x" 2 "y" }
	}

	group "spreadsheet\\rows" 
	""
	{
		arg "* columns - names of the columns"
		arg "* data - block or list of rows (each row is a block or list)"
	}

	{
		equal { spreadsheet\rows { 'a 'b } { { 1 2 } { 3 4 } } } spreadsheet { 'a 'b } { 1 2 3 4 }
		equal { spreadsheet\rows { 'a 'b } list [ list [ 1 2 ] list [ 3 4 ] ] |type? } 'spreadsheet
	}

	group "to-spreadsheet" 
	""
	{
		arg "* data"
	}

	{
		equal { to-spreadsheet list [ dict { "a" 1 } dict { "a" b } ] |type? } 'spreadsheet
	}

	group "row-to-dict" 
	""
	{
	}

	{
		equal {
		spreadsheet { 'a 'b } { 1 10 } |nth 1 |row-to-dict
		} dict { 'a 1 'b 10 }
	}

	group "add-rows" 
	""
	{
		arg "* sheet - the sheet that is getting rows added to it"
		arg "* rows - a block containing one or more rows worth of values, or a SpreadsheetRow Native value"
	}

	{
		equal {
		ref spreadsheet { "a" "b" } { 6 60 7 70 } :sheet
		sheet .deref |add-rows [ 3 30 ] |length?
		} 3
		equal {
		ref spreadsheet { "a" "b" } { 1 80 2 90 } :sheet
		sheet .deref |add-rows { 3 30 } |nth 3 |row-to-dict
		} dict { "a" 3 "b" 30 }
	}

	group "add-rows!" 
	""
	{
		arg "* sheet - the reference to the sheet that is getting rows added to it"
		arg "* rows - a block containing one or more rows worth of values, or a SpreadsheetRow Native value"
		arg "Tags: #spreasheet #mutation"
	}

	{
		equal {
		ref spreadsheet { "a" "b"  } { 1 10 2 20 } :sheet
		sheet .add-rows! [ 3 30 ] sheet .deref .length?
		sheet |nth 3 |row-to-dict
		} dict { "a" 3 "b" 30 }
	}

	group "update-row!" 
	""
	{
		arg "* sheet-ref - A ref to a spreadsheet"
		arg "* idx - the index of the row to update, 1-based"
		arg "* updater - One of either a function, a dict, or a Spreadsheet Row"
		arg "Tags: #spreadsheet #mutation"
	}

	{
		equal {
		spr1: ref spreadsheet { "a" "b" } { 1 10 2 20 }
		spr1 .update-row! 1 dict [ "a" 111 ]
		spr1 .deref .A1
		} 111
		equal {
		spr1: ref spreadsheet { "a" "b" } { 1 10 2 20 }
		incrA: fn { row } { row + [ "a" ( "a" <- row ) + 9 "b" 2 ] }
		update-row! spr1 1 ?incrA
		spr1 |deref |nth 1 |row-to-dict
		} dict { "a" 10 "b" 2 }
	}

	group "remove-row!" 
	""
	{
		arg "* sheet-ref"
		arg "* row-idx - Index of row to remove, 1-based"
		arg "Tags: #spreadsheet #mutation"
	}

	{
		equal {
		spr1: ref spreadsheet { "a" "b" } { 1 10 2 20 }
		spr1 .remove-row! 1
		spr1 .deref |first |row-to-dict
		} dict { "a" 2 "b" 20 }
	}

	group "load\\csv" 
	""
	{
		arg "* file-uri - location of csv file to load"
		arg "Tags: #spreadsheet #loading #csv"
	}

	{
		equal {
		cc os
		f: mktmp + "/test.csv"
		spr1: spreadsheet { "a" "b" "c" } { 1 1.1 "a" 2 2.2 "b" 3 3.3 "c" }
		spr1 .save\csv f
		spr2: load\csv f |autotype 1.0
		spr1 = spr2
		} true
	}

	group "save\\csv" 
	""
	{
		arg "* sheet    - the sheet to save"
		arg "* file-url - where to save the sheet as a .csv file"
		arg "Tags: #spreadsheet #saving #csv"
	}

	{
		equal {
		cc os
		f:: mktmp + "/test.csv"
		spr1:: spreadsheet { "a" "b" "c" } { 1 1.1 "a" 2 2.2 "b" 3 3.3 "c" }
		spr1 .save\csv f
		spr2:: load\csv f |autotype 1.0
		spr1 = spr2
		} true
	}

	group "load\\xlsx" 
	""
	{
		arg "* file-uri - location of xlsx file to load"
		arg "Tags: #spreadsheet #loading #xlsx"
	}

	{
		equal {
		cc os
		f:: mktmp + "/test.xlsx"
		spr1:: spreadsheet { "a" "b" "c" } { 1 1.1 "a" 2 2.2 "b" 3 3.3 "c" }
		spr1 .save\xlsx f
		spr2:: load\xlsx f |autotype 1.0
		spr1 = spr2
		} true
	}

	group "save\\xlsx" 
	""
	{
		arg "* spreadsheet    - the spreadsheet to save"
		arg "* file-url 		- where to save the spreadsheet as a .xlsx file"
		arg "Tags: #spreadsheet #saving #xlsx"
	}

	{
		equal {
		cc os
		f:: mktmp + "/test.xlsx"
		spr1:: spreadsheet { "a" "b" "c" } { 1 1.1 "a" 2 2.2 "b" 3 3.3 "c" }
		spr1 .save\xlsx f
		spr2:: load\xlsx f |autotype 1.0
		spr1 = spr2
		} true
	}

	group "where-equal" 
	""
	{
		arg "* sheet"
		arg "* column"
		arg "* value"
		arg "Tags: #filter #spreadsheets"
	}

	{
		equal {
		spreadsheet { "name" } { "Enno" "Enya" "Enid" "Bob" "Bill" } |where-equal 'name "Enno" |first |row-to-dict
		} dict { "name" "Enno" }
	}

	group "col-sum" 
	""
	{
	}

	{
		equal { spreadsheet { 'a } { 1 2 3 } |col-sum "a" } 6
	}

	group "col-avg" 
	""
	{
	}

	{
		equal { spreadsheet { 'a } { 1 2 3 } |col-avg 'a } 2.0
	}

	group "B1" 
	""
	{
	}

	{
		equal { spreadsheet { 'a } { 1 2 3 } |B1 } 2
	}

}

